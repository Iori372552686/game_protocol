// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v6.30.1
// source: dbsvr.proto

package g1_protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DB_UID_GET_REQ
type DBUidGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbType uint32 `protobuf:"varint,1,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	Uid    uint64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *DBUidGetReq) Reset() {
	*x = DBUidGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBUidGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBUidGetReq) ProtoMessage() {}

func (x *DBUidGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBUidGetReq.ProtoReflect.Descriptor instead.
func (*DBUidGetReq) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{0}
}

func (x *DBUidGetReq) GetDbType() uint32 {
	if x != nil {
		return x.DbType
	}
	return 0
}

func (x *DBUidGetReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type DBUidGetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  *Ret   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DBUidGetRsp) Reset() {
	*x = DBUidGetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBUidGetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBUidGetRsp) ProtoMessage() {}

func (x *DBUidGetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBUidGetRsp.ProtoReflect.Descriptor instead.
func (*DBUidGetRsp) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{1}
}

func (x *DBUidGetRsp) GetRet() *Ret {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *DBUidGetRsp) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// DB_UID_MGET_REQ
type DBUidMGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbType  uint32   `protobuf:"varint,1,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	UidList []uint64 `protobuf:"varint,2,rep,packed,name=uid_list,json=uidList,proto3" json:"uid_list,omitempty"`
}

func (x *DBUidMGetReq) Reset() {
	*x = DBUidMGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBUidMGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBUidMGetReq) ProtoMessage() {}

func (x *DBUidMGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBUidMGetReq.ProtoReflect.Descriptor instead.
func (*DBUidMGetReq) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{2}
}

func (x *DBUidMGetReq) GetDbType() uint32 {
	if x != nil {
		return x.DbType
	}
	return 0
}

func (x *DBUidMGetReq) GetUidList() []uint64 {
	if x != nil {
		return x.UidList
	}
	return nil
}

type DBUidMGetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *Ret     `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	DataList [][]byte `protobuf:"bytes,2,rep,name=data_list,json=dataList,proto3" json:"data_list,omitempty"`
}

func (x *DBUidMGetRsp) Reset() {
	*x = DBUidMGetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBUidMGetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBUidMGetRsp) ProtoMessage() {}

func (x *DBUidMGetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBUidMGetRsp.ProtoReflect.Descriptor instead.
func (*DBUidMGetRsp) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{3}
}

func (x *DBUidMGetRsp) GetRet() *Ret {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *DBUidMGetRsp) GetDataList() [][]byte {
	if x != nil {
		return x.DataList
	}
	return nil
}

// DB_UID_SET_REQ
type DBUidSetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbType    uint32 `protobuf:"varint,1,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	Uid       uint64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	IgnoreRsp bool   `protobuf:"varint,4,opt,name=ignore_rsp,json=ignoreRsp,proto3" json:"ignore_rsp,omitempty"`
}

func (x *DBUidSetReq) Reset() {
	*x = DBUidSetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBUidSetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBUidSetReq) ProtoMessage() {}

func (x *DBUidSetReq) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBUidSetReq.ProtoReflect.Descriptor instead.
func (*DBUidSetReq) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{4}
}

func (x *DBUidSetReq) GetDbType() uint32 {
	if x != nil {
		return x.DbType
	}
	return 0
}

func (x *DBUidSetReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *DBUidSetReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DBUidSetReq) GetIgnoreRsp() bool {
	if x != nil {
		return x.IgnoreRsp
	}
	return false
}

type DBUidSetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    *Ret   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	DbType uint32 `protobuf:"varint,2,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
}

func (x *DBUidSetRsp) Reset() {
	*x = DBUidSetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBUidSetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBUidSetRsp) ProtoMessage() {}

func (x *DBUidSetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBUidSetRsp.ProtoReflect.Descriptor instead.
func (*DBUidSetRsp) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{5}
}

func (x *DBUidSetRsp) GetRet() *Ret {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *DBUidSetRsp) GetDbType() uint32 {
	if x != nil {
		return x.DbType
	}
	return 0
}

// DB_COMM_GET_REQ
type DBCommGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbType uint32 `protobuf:"varint,1,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DBCommGetReq) Reset() {
	*x = DBCommGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommGetReq) ProtoMessage() {}

func (x *DBCommGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommGetReq.ProtoReflect.Descriptor instead.
func (*DBCommGetReq) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{6}
}

func (x *DBCommGetReq) GetDbType() uint32 {
	if x != nil {
		return x.DbType
	}
	return 0
}

func (x *DBCommGetReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type DBCommGetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  *Ret   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DBCommGetRsp) Reset() {
	*x = DBCommGetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommGetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommGetRsp) ProtoMessage() {}

func (x *DBCommGetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommGetRsp.ProtoReflect.Descriptor instead.
func (*DBCommGetRsp) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{7}
}

func (x *DBCommGetRsp) GetRet() *Ret {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *DBCommGetRsp) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// DB_COMM_MGET_REQ
type DBCommMGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbType  uint32   `protobuf:"varint,1,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	KeyList []string `protobuf:"bytes,2,rep,name=key_list,json=keyList,proto3" json:"key_list,omitempty"`
}

func (x *DBCommMGetReq) Reset() {
	*x = DBCommMGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommMGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommMGetReq) ProtoMessage() {}

func (x *DBCommMGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommMGetReq.ProtoReflect.Descriptor instead.
func (*DBCommMGetReq) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{8}
}

func (x *DBCommMGetReq) GetDbType() uint32 {
	if x != nil {
		return x.DbType
	}
	return 0
}

func (x *DBCommMGetReq) GetKeyList() []string {
	if x != nil {
		return x.KeyList
	}
	return nil
}

type DBCommMGetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *Ret     `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	DataList [][]byte `protobuf:"bytes,2,rep,name=data_list,json=dataList,proto3" json:"data_list,omitempty"`
}

func (x *DBCommMGetRsp) Reset() {
	*x = DBCommMGetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommMGetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommMGetRsp) ProtoMessage() {}

func (x *DBCommMGetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommMGetRsp.ProtoReflect.Descriptor instead.
func (*DBCommMGetRsp) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{9}
}

func (x *DBCommMGetRsp) GetRet() *Ret {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *DBCommMGetRsp) GetDataList() [][]byte {
	if x != nil {
		return x.DataList
	}
	return nil
}

// DB_COMM_SET_REQ
type DBCommSetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbType        uint32 `protobuf:"varint,1,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	Key           string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Data          []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	IgnoreRsp     bool   `protobuf:"varint,4,opt,name=ignore_rsp,json=ignoreRsp,proto3" json:"ignore_rsp,omitempty"`
	ExpireSeconds int32  `protobuf:"varint,5,opt,name=expire_seconds,json=expireSeconds,proto3" json:"expire_seconds,omitempty"`
}

func (x *DBCommSetReq) Reset() {
	*x = DBCommSetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommSetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommSetReq) ProtoMessage() {}

func (x *DBCommSetReq) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommSetReq.ProtoReflect.Descriptor instead.
func (*DBCommSetReq) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{10}
}

func (x *DBCommSetReq) GetDbType() uint32 {
	if x != nil {
		return x.DbType
	}
	return 0
}

func (x *DBCommSetReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DBCommSetReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DBCommSetReq) GetIgnoreRsp() bool {
	if x != nil {
		return x.IgnoreRsp
	}
	return false
}

func (x *DBCommSetReq) GetExpireSeconds() int32 {
	if x != nil {
		return x.ExpireSeconds
	}
	return 0
}

type DBCommSetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    *Ret   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	DbType uint32 `protobuf:"varint,2,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
}

func (x *DBCommSetRsp) Reset() {
	*x = DBCommSetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommSetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommSetRsp) ProtoMessage() {}

func (x *DBCommSetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommSetRsp.ProtoReflect.Descriptor instead.
func (*DBCommSetRsp) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{11}
}

func (x *DBCommSetRsp) GetRet() *Ret {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *DBCommSetRsp) GetDbType() uint32 {
	if x != nil {
		return x.DbType
	}
	return 0
}

// DB_COMM_DEL_REQ
type DBCommDelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbType uint32 `protobuf:"varint,1,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DBCommDelReq) Reset() {
	*x = DBCommDelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommDelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommDelReq) ProtoMessage() {}

func (x *DBCommDelReq) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommDelReq.ProtoReflect.Descriptor instead.
func (*DBCommDelReq) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{12}
}

func (x *DBCommDelReq) GetDbType() uint32 {
	if x != nil {
		return x.DbType
	}
	return 0
}

func (x *DBCommDelReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type DBCommDelRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *Ret `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
}

func (x *DBCommDelRsp) Reset() {
	*x = DBCommDelRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommDelRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommDelRsp) ProtoMessage() {}

func (x *DBCommDelRsp) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommDelRsp.ProtoReflect.Descriptor instead.
func (*DBCommDelRsp) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{13}
}

func (x *DBCommDelRsp) GetRet() *Ret {
	if x != nil {
		return x.Ret
	}
	return nil
}

// DB_COMM_INCR_REQ
type DBCommIncrReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbType uint32 `protobuf:"varint,1,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DBCommIncrReq) Reset() {
	*x = DBCommIncrReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommIncrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommIncrReq) ProtoMessage() {}

func (x *DBCommIncrReq) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommIncrReq.ProtoReflect.Descriptor instead.
func (*DBCommIncrReq) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{14}
}

func (x *DBCommIncrReq) GetDbType() uint32 {
	if x != nil {
		return x.DbType
	}
	return 0
}

func (x *DBCommIncrReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type DBCommIncrRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret   *Ret  `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Value int64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DBCommIncrRsp) Reset() {
	*x = DBCommIncrRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommIncrRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommIncrRsp) ProtoMessage() {}

func (x *DBCommIncrRsp) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommIncrRsp.ProtoReflect.Descriptor instead.
func (*DBCommIncrRsp) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{15}
}

func (x *DBCommIncrRsp) GetRet() *Ret {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *DBCommIncrRsp) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// DB_COMM_ZSET_SET_REQ
type DBCommZsetSetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbType    uint32 `protobuf:"varint,1,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	SetName   string `protobuf:"bytes,2,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
	MaxKeyCnt int32  `protobuf:"varint,3,opt,name=max_key_cnt,json=maxKeyCnt,proto3" json:"max_key_cnt,omitempty"`
	Key       string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Score     int32  `protobuf:"varint,5,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *DBCommZsetSetReq) Reset() {
	*x = DBCommZsetSetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommZsetSetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommZsetSetReq) ProtoMessage() {}

func (x *DBCommZsetSetReq) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommZsetSetReq.ProtoReflect.Descriptor instead.
func (*DBCommZsetSetReq) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{16}
}

func (x *DBCommZsetSetReq) GetDbType() uint32 {
	if x != nil {
		return x.DbType
	}
	return 0
}

func (x *DBCommZsetSetReq) GetSetName() string {
	if x != nil {
		return x.SetName
	}
	return ""
}

func (x *DBCommZsetSetReq) GetMaxKeyCnt() int32 {
	if x != nil {
		return x.MaxKeyCnt
	}
	return 0
}

func (x *DBCommZsetSetReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DBCommZsetSetReq) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type DBCommZsetSetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *Ret `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
}

func (x *DBCommZsetSetRsp) Reset() {
	*x = DBCommZsetSetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommZsetSetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommZsetSetRsp) ProtoMessage() {}

func (x *DBCommZsetSetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommZsetSetRsp.ProtoReflect.Descriptor instead.
func (*DBCommZsetSetRsp) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{17}
}

func (x *DBCommZsetSetRsp) GetRet() *Ret {
	if x != nil {
		return x.Ret
	}
	return nil
}

// DB_COMM_ZSET_GET_REQ
type DBCommZsetGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbType    uint32 `protobuf:"varint,1,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	SetName   string `protobuf:"bytes,2,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
	BeginRank int32  `protobuf:"varint,3,opt,name=begin_rank,json=beginRank,proto3" json:"begin_rank,omitempty"`
	EndRank   int32  `protobuf:"varint,4,opt,name=end_rank,json=endRank,proto3" json:"end_rank,omitempty"`
}

func (x *DBCommZsetGetReq) Reset() {
	*x = DBCommZsetGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommZsetGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommZsetGetReq) ProtoMessage() {}

func (x *DBCommZsetGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommZsetGetReq.ProtoReflect.Descriptor instead.
func (*DBCommZsetGetReq) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{18}
}

func (x *DBCommZsetGetReq) GetDbType() uint32 {
	if x != nil {
		return x.DbType
	}
	return 0
}

func (x *DBCommZsetGetReq) GetSetName() string {
	if x != nil {
		return x.SetName
	}
	return ""
}

func (x *DBCommZsetGetReq) GetBeginRank() int32 {
	if x != nil {
		return x.BeginRank
	}
	return 0
}

func (x *DBCommZsetGetReq) GetEndRank() int32 {
	if x != nil {
		return x.EndRank
	}
	return 0
}

type DBCommZsetGetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret       *Ret     `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	BeginRank uint32   `protobuf:"varint,2,opt,name=begin_rank,json=beginRank,proto3" json:"begin_rank,omitempty"`
	EndRank   uint32   `protobuf:"varint,3,opt,name=end_rank,json=endRank,proto3" json:"end_rank,omitempty"`
	RankList  []string `protobuf:"bytes,4,rep,name=rank_list,json=rankList,proto3" json:"rank_list,omitempty"`
}

func (x *DBCommZsetGetRsp) Reset() {
	*x = DBCommZsetGetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommZsetGetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommZsetGetRsp) ProtoMessage() {}

func (x *DBCommZsetGetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommZsetGetRsp.ProtoReflect.Descriptor instead.
func (*DBCommZsetGetRsp) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{19}
}

func (x *DBCommZsetGetRsp) GetRet() *Ret {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *DBCommZsetGetRsp) GetBeginRank() uint32 {
	if x != nil {
		return x.BeginRank
	}
	return 0
}

func (x *DBCommZsetGetRsp) GetEndRank() uint32 {
	if x != nil {
		return x.EndRank
	}
	return 0
}

func (x *DBCommZsetGetRsp) GetRankList() []string {
	if x != nil {
		return x.RankList
	}
	return nil
}

// DB_COMM_ZSET_FIND_RANK_REQ
type DBCommZsetFindRankReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbType  uint32 `protobuf:"varint,1,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	SetName string `protobuf:"bytes,2,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
	Key     string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DBCommZsetFindRankReq) Reset() {
	*x = DBCommZsetFindRankReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommZsetFindRankReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommZsetFindRankReq) ProtoMessage() {}

func (x *DBCommZsetFindRankReq) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommZsetFindRankReq.ProtoReflect.Descriptor instead.
func (*DBCommZsetFindRankReq) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{20}
}

func (x *DBCommZsetFindRankReq) GetDbType() uint32 {
	if x != nil {
		return x.DbType
	}
	return 0
}

func (x *DBCommZsetFindRankReq) GetSetName() string {
	if x != nil {
		return x.SetName
	}
	return ""
}

func (x *DBCommZsetFindRankReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type DBCommZsetFindRankRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  *Ret  `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Rank int32 `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
}

func (x *DBCommZsetFindRankRsp) Reset() {
	*x = DBCommZsetFindRankRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommZsetFindRankRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommZsetFindRankRsp) ProtoMessage() {}

func (x *DBCommZsetFindRankRsp) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommZsetFindRankRsp.ProtoReflect.Descriptor instead.
func (*DBCommZsetFindRankRsp) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{21}
}

func (x *DBCommZsetFindRankRsp) GetRet() *Ret {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *DBCommZsetFindRankRsp) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

// DB_COMM_ZSET_INCR_REQ
type DBCommZsetIncrReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbType     uint32  `protobuf:"varint,1,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	SetName    string  `protobuf:"bytes,2,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
	Member     string  `protobuf:"bytes,3,opt,name=member,proto3" json:"member,omitempty"`
	AddedScore float64 `protobuf:"fixed64,4,opt,name=added_score,json=addedScore,proto3" json:"added_score,omitempty"`
}

func (x *DBCommZsetIncrReq) Reset() {
	*x = DBCommZsetIncrReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommZsetIncrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommZsetIncrReq) ProtoMessage() {}

func (x *DBCommZsetIncrReq) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommZsetIncrReq.ProtoReflect.Descriptor instead.
func (*DBCommZsetIncrReq) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{22}
}

func (x *DBCommZsetIncrReq) GetDbType() uint32 {
	if x != nil {
		return x.DbType
	}
	return 0
}

func (x *DBCommZsetIncrReq) GetSetName() string {
	if x != nil {
		return x.SetName
	}
	return ""
}

func (x *DBCommZsetIncrReq) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

func (x *DBCommZsetIncrReq) GetAddedScore() float64 {
	if x != nil {
		return x.AddedScore
	}
	return 0
}

type DBCommZsetIncrRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *Ret    `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	ScoreAfter float64 `protobuf:"fixed64,2,opt,name=score_after,json=scoreAfter,proto3" json:"score_after,omitempty"`
}

func (x *DBCommZsetIncrRsp) Reset() {
	*x = DBCommZsetIncrRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommZsetIncrRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommZsetIncrRsp) ProtoMessage() {}

func (x *DBCommZsetIncrRsp) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommZsetIncrRsp.ProtoReflect.Descriptor instead.
func (*DBCommZsetIncrRsp) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{23}
}

func (x *DBCommZsetIncrRsp) GetRet() *Ret {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *DBCommZsetIncrRsp) GetScoreAfter() float64 {
	if x != nil {
		return x.ScoreAfter
	}
	return 0
}

// DB_COMM_ZSCORE_REQ
type DBCommZScoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbType  uint32 `protobuf:"varint,1,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	SetName string `protobuf:"bytes,2,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
	Member  string `protobuf:"bytes,3,opt,name=member,proto3" json:"member,omitempty"`
}

func (x *DBCommZScoreReq) Reset() {
	*x = DBCommZScoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommZScoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommZScoreReq) ProtoMessage() {}

func (x *DBCommZScoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommZScoreReq.ProtoReflect.Descriptor instead.
func (*DBCommZScoreReq) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{24}
}

func (x *DBCommZScoreReq) GetDbType() uint32 {
	if x != nil {
		return x.DbType
	}
	return 0
}

func (x *DBCommZScoreReq) GetSetName() string {
	if x != nil {
		return x.SetName
	}
	return ""
}

func (x *DBCommZScoreReq) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

type DBCommZScoreRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret   *Ret    `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Score float64 `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *DBCommZScoreRsp) Reset() {
	*x = DBCommZScoreRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommZScoreRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommZScoreRsp) ProtoMessage() {}

func (x *DBCommZScoreRsp) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommZScoreRsp.ProtoReflect.Descriptor instead.
func (*DBCommZScoreRsp) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{25}
}

func (x *DBCommZScoreRsp) GetRet() *Ret {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *DBCommZScoreRsp) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

// DB_COMM_ZREVRANGE_REQ
type DBCommZRevRangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbType     uint32 `protobuf:"varint,1,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	Key        string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Start      int32  `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	Stop       int32  `protobuf:"varint,4,opt,name=stop,proto3" json:"stop,omitempty"`
	WithScores bool   `protobuf:"varint,5,opt,name=with_scores,json=withScores,proto3" json:"with_scores,omitempty"`
}

func (x *DBCommZRevRangeReq) Reset() {
	*x = DBCommZRevRangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommZRevRangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommZRevRangeReq) ProtoMessage() {}

func (x *DBCommZRevRangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommZRevRangeReq.ProtoReflect.Descriptor instead.
func (*DBCommZRevRangeReq) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{26}
}

func (x *DBCommZRevRangeReq) GetDbType() uint32 {
	if x != nil {
		return x.DbType
	}
	return 0
}

func (x *DBCommZRevRangeReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DBCommZRevRangeReq) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *DBCommZRevRangeReq) GetStop() int32 {
	if x != nil {
		return x.Stop
	}
	return 0
}

func (x *DBCommZRevRangeReq) GetWithScores() bool {
	if x != nil {
		return x.WithScores
	}
	return false
}

type DBRedisZItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member string `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	Score  int32  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	Rank   int32  `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
}

func (x *DBRedisZItem) Reset() {
	*x = DBRedisZItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBRedisZItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBRedisZItem) ProtoMessage() {}

func (x *DBRedisZItem) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBRedisZItem.ProtoReflect.Descriptor instead.
func (*DBRedisZItem) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{27}
}

func (x *DBRedisZItem) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

func (x *DBRedisZItem) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *DBRedisZItem) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

type DBCommZRevRangeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret   *Ret            `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Items []*DBRedisZItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *DBCommZRevRangeRsp) Reset() {
	*x = DBCommZRevRangeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommZRevRangeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommZRevRangeRsp) ProtoMessage() {}

func (x *DBCommZRevRangeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommZRevRangeRsp.ProtoReflect.Descriptor instead.
func (*DBCommZRevRangeRsp) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{28}
}

func (x *DBCommZRevRangeRsp) GetRet() *Ret {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *DBCommZRevRangeRsp) GetItems() []*DBRedisZItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// DB_COMM_EXPIRE_REQ
type DBCommExpireReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbType  uint32 `protobuf:"varint,1,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	Key     string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Seconds int32  `protobuf:"varint,3,opt,name=seconds,proto3" json:"seconds,omitempty"`
}

func (x *DBCommExpireReq) Reset() {
	*x = DBCommExpireReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommExpireReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommExpireReq) ProtoMessage() {}

func (x *DBCommExpireReq) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommExpireReq.ProtoReflect.Descriptor instead.
func (*DBCommExpireReq) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{29}
}

func (x *DBCommExpireReq) GetDbType() uint32 {
	if x != nil {
		return x.DbType
	}
	return 0
}

func (x *DBCommExpireReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DBCommExpireReq) GetSeconds() int32 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

type DBCommExpireRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *Ret `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
}

func (x *DBCommExpireRsp) Reset() {
	*x = DBCommExpireRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommExpireRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommExpireRsp) ProtoMessage() {}

func (x *DBCommExpireRsp) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommExpireRsp.ProtoReflect.Descriptor instead.
func (*DBCommExpireRsp) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{30}
}

func (x *DBCommExpireRsp) GetRet() *Ret {
	if x != nil {
		return x.Ret
	}
	return nil
}

// DB_COMM_SETEXNX_REQ
type DBCommSetExNxReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbType  uint32 `protobuf:"varint,1,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	Key     string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value   string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Seconds int32  `protobuf:"varint,4,opt,name=seconds,proto3" json:"seconds,omitempty"`
}

func (x *DBCommSetExNxReq) Reset() {
	*x = DBCommSetExNxReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommSetExNxReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommSetExNxReq) ProtoMessage() {}

func (x *DBCommSetExNxReq) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommSetExNxReq.ProtoReflect.Descriptor instead.
func (*DBCommSetExNxReq) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{31}
}

func (x *DBCommSetExNxReq) GetDbType() uint32 {
	if x != nil {
		return x.DbType
	}
	return 0
}

func (x *DBCommSetExNxReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DBCommSetExNxReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DBCommSetExNxReq) GetSeconds() int32 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

type DBCommSetExNxRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *Ret `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
}

func (x *DBCommSetExNxRsp) Reset() {
	*x = DBCommSetExNxRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbsvr_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCommSetExNxRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCommSetExNxRsp) ProtoMessage() {}

func (x *DBCommSetExNxRsp) ProtoReflect() protoreflect.Message {
	mi := &file_dbsvr_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCommSetExNxRsp.ProtoReflect.Descriptor instead.
func (*DBCommSetExNxRsp) Descriptor() ([]byte, []int) {
	return file_dbsvr_proto_rawDescGZIP(), []int{32}
}

func (x *DBCommSetExNxRsp) GetRet() *Ret {
	if x != nil {
		return x.Ret
	}
	return nil
}

var file_dbsvr_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50000,
		Name:          "g1.protocol.xorm_type",
		Tag:           "bytes,50000,opt,name=xorm_type",
		Filename:      "dbsvr.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50001,
		Name:          "g1.protocol.xorm_column",
		Tag:           "bytes,50001,opt,name=xorm_column",
		Filename:      "dbsvr.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         50002,
		Name:          "g1.protocol.xorm_pk",
		Tag:           "varint,50002,opt,name=xorm_pk",
		Filename:      "dbsvr.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         50003,
		Name:          "g1.protocol.xorm_autoincr",
		Tag:           "varint,50003,opt,name=xorm_autoincr",
		Filename:      "dbsvr.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         50004,
		Name:          "g1.protocol.xorm_index",
		Tag:           "varint,50004,opt,name=xorm_index",
		Filename:      "dbsvr.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         50005,
		Name:          "g1.protocol.xorm_nullable",
		Tag:           "varint,50005,opt,name=xorm_nullable",
		Filename:      "dbsvr.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional string xorm_type = 50000;
	E_XormType = &file_dbsvr_proto_extTypes[0] // 数据库字段类型
	// optional string xorm_column = 50001;
	E_XormColumn = &file_dbsvr_proto_extTypes[1] // 数据库列名（默认使用 proto 字段名）
	// optional bool xorm_pk = 50002;
	E_XormPk = &file_dbsvr_proto_extTypes[2] // 是否为主键
	// optional bool xorm_autoincr = 50003;
	E_XormAutoincr = &file_dbsvr_proto_extTypes[3] // 是否自增
	// optional bool xorm_index = 50004;
	E_XormIndex = &file_dbsvr_proto_extTypes[4] // 是否创建索引
	// optional bool xorm_nullable = 50005;
	E_XormNullable = &file_dbsvr_proto_extTypes[5] // 是否允许 NULL
)

var File_dbsvr_proto protoreflect.FileDescriptor

var file_dbsvr_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x64, 0x62, 0x73, 0x76, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x67,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x0b, 0x44, 0x42,
	0x55, 0x69, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x0b, 0x44, 0x42, 0x55, 0x69, 0x64, 0x47, 0x65, 0x74,
	0x52, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52,
	0x65, 0x74, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x42, 0x0a, 0x0c, 0x44,
	0x42, 0x55, 0x69, 0x64, 0x4d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x64,
	0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x4f, 0x0a, 0x0c, 0x44, 0x42, 0x55, 0x69, 0x64, 0x4d, 0x47, 0x65, 0x74, 0x52, 0x73, 0x70, 0x12,
	0x22, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x74, 0x52, 0x03,
	0x72, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x6b, 0x0a, 0x0b, 0x44, 0x42, 0x55, 0x69, 0x64, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x73, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x73, 0x70, 0x22, 0x4a, 0x0a,
	0x0b, 0x44, 0x42, 0x55, 0x69, 0x64, 0x53, 0x65, 0x74, 0x52, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x74, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x22, 0x39, 0x0a, 0x0c, 0x44, 0x42, 0x43,
	0x6f, 0x6d, 0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0x46, 0x0a, 0x0c, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x47, 0x65,
	0x74, 0x52, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x52, 0x65, 0x74, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x43, 0x0a, 0x0d,
	0x44, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x4d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x64, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x50, 0x0a, 0x0d, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x4d, 0x47, 0x65, 0x74, 0x52,
	0x73, 0x70, 0x12, 0x22, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65,
	0x74, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x0c, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x73,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52,
	0x73, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x4b, 0x0a, 0x0c, 0x44, 0x42, 0x43,
	0x6f, 0x6d, 0x6d, 0x53, 0x65, 0x74, 0x52, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x74, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x64, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x22, 0x39, 0x0a, 0x0c, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x6d,
	0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x22, 0x32, 0x0a, 0x0c, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x44, 0x65, 0x6c, 0x52, 0x73,
	0x70, 0x12, 0x22, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x74,
	0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x3a, 0x0a, 0x0d, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x49,
	0x6e, 0x63, 0x72, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x22, 0x49, 0x0a, 0x0d, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x49, 0x6e, 0x63, 0x72, 0x52,
	0x73, 0x70, 0x12, 0x22, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65,
	0x74, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8e, 0x01, 0x0a,
	0x10, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x5a, 0x73, 0x65, 0x74, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x63, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4b,
	0x65, 0x79, 0x43, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x36, 0x0a,
	0x10, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x5a, 0x73, 0x65, 0x74, 0x53, 0x65, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x22, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x74,
	0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x10, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x6d,
	0x5a, 0x73, 0x65, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0x8d, 0x01, 0x0a, 0x10, 0x44, 0x42, 0x43,
	0x6f, 0x6d, 0x6d, 0x5a, 0x73, 0x65, 0x74, 0x47, 0x65, 0x74, 0x52, 0x73, 0x70, 0x12, 0x22, 0x0a,
	0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x31, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x74, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x61, 0x6e, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5d, 0x0a, 0x15, 0x44, 0x42, 0x43, 0x6f,
	0x6d, 0x6d, 0x5a, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x4f, 0x0a, 0x15, 0x44, 0x42, 0x43, 0x6f, 0x6d,
	0x6d, 0x5a, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x73, 0x70,
	0x12, 0x22, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x74, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0x80, 0x01, 0x0a, 0x11, 0x44, 0x42, 0x43,
	0x6f, 0x6d, 0x6d, 0x5a, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x64, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x64,
	0x64, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x61, 0x64, 0x64, 0x65, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x58, 0x0a, 0x11, 0x44,
	0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x5a, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x52, 0x73, 0x70,
	0x12, 0x22, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x74, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x22, 0x5d, 0x0a, 0x0f, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x5a,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x4b, 0x0a, 0x0f, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x5a, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x52, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x74, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x22, 0x8a, 0x01, 0x0a, 0x12, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x5a, 0x52, 0x65, 0x76,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x6f,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x12, 0x1f, 0x0a,
	0x0b, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x50,
	0x0a, 0x0c, 0x44, 0x42, 0x52, 0x65, 0x64, 0x69, 0x73, 0x5a, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b,
	0x22, 0x69, 0x0a, 0x12, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x5a, 0x52, 0x65, 0x76, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x52, 0x65, 0x74, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x44, 0x42, 0x52, 0x65, 0x64, 0x69, 0x73, 0x5a,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x56, 0x0a, 0x0f, 0x44,
	0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x64, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x22, 0x35, 0x0a, 0x0f, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x52, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x52, 0x65, 0x74, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x6d, 0x0a, 0x10, 0x44, 0x42,
	0x43, 0x6f, 0x6d, 0x6d, 0x53, 0x65, 0x74, 0x45, 0x78, 0x4e, 0x78, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x64, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x36, 0x0a, 0x10, 0x44, 0x42, 0x43,
	0x6f, 0x6d, 0x6d, 0x53, 0x65, 0x74, 0x45, 0x78, 0x4e, 0x78, 0x52, 0x73, 0x70, 0x12, 0x22, 0x0a,
	0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x31, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x74, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x3a, 0x3c, 0x0a, 0x09, 0x78, 0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd0, 0x86,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x78, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x3a,
	0x40, 0x0a, 0x0b, 0x78, 0x6f, 0x72, 0x6d, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd1, 0x86,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x78, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x3a, 0x38, 0x0a, 0x07, 0x78, 0x6f, 0x72, 0x6d, 0x5f, 0x70, 0x6b, 0x12, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd2, 0x86, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x78, 0x6f, 0x72, 0x6d, 0x50, 0x6b, 0x3a, 0x44, 0x0a, 0x0d, 0x78,
	0x6f, 0x72, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x69, 0x6e, 0x63, 0x72, 0x12, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd3, 0x86, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x78, 0x6f, 0x72, 0x6d, 0x41, 0x75, 0x74, 0x6f, 0x69, 0x6e, 0x63,
	0x72, 0x3a, 0x3e, 0x0a, 0x0a, 0x78, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd4,
	0x86, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x78, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x3a, 0x44, 0x0a, 0x0d, 0x78, 0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0xd5, 0x86, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x78, 0x6f, 0x72, 0x6d, 0x4e,
	0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x67, 0x31, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dbsvr_proto_rawDescOnce sync.Once
	file_dbsvr_proto_rawDescData = file_dbsvr_proto_rawDesc
)

func file_dbsvr_proto_rawDescGZIP() []byte {
	file_dbsvr_proto_rawDescOnce.Do(func() {
		file_dbsvr_proto_rawDescData = protoimpl.X.CompressGZIP(file_dbsvr_proto_rawDescData)
	})
	return file_dbsvr_proto_rawDescData
}

var file_dbsvr_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_dbsvr_proto_goTypes = []interface{}{
	(*DBUidGetReq)(nil),               // 0: g1.protocol.DBUidGetReq
	(*DBUidGetRsp)(nil),               // 1: g1.protocol.DBUidGetRsp
	(*DBUidMGetReq)(nil),              // 2: g1.protocol.DBUidMGetReq
	(*DBUidMGetRsp)(nil),              // 3: g1.protocol.DBUidMGetRsp
	(*DBUidSetReq)(nil),               // 4: g1.protocol.DBUidSetReq
	(*DBUidSetRsp)(nil),               // 5: g1.protocol.DBUidSetRsp
	(*DBCommGetReq)(nil),              // 6: g1.protocol.DBCommGetReq
	(*DBCommGetRsp)(nil),              // 7: g1.protocol.DBCommGetRsp
	(*DBCommMGetReq)(nil),             // 8: g1.protocol.DBCommMGetReq
	(*DBCommMGetRsp)(nil),             // 9: g1.protocol.DBCommMGetRsp
	(*DBCommSetReq)(nil),              // 10: g1.protocol.DBCommSetReq
	(*DBCommSetRsp)(nil),              // 11: g1.protocol.DBCommSetRsp
	(*DBCommDelReq)(nil),              // 12: g1.protocol.DBCommDelReq
	(*DBCommDelRsp)(nil),              // 13: g1.protocol.DBCommDelRsp
	(*DBCommIncrReq)(nil),             // 14: g1.protocol.DBCommIncrReq
	(*DBCommIncrRsp)(nil),             // 15: g1.protocol.DBCommIncrRsp
	(*DBCommZsetSetReq)(nil),          // 16: g1.protocol.DBCommZsetSetReq
	(*DBCommZsetSetRsp)(nil),          // 17: g1.protocol.DBCommZsetSetRsp
	(*DBCommZsetGetReq)(nil),          // 18: g1.protocol.DBCommZsetGetReq
	(*DBCommZsetGetRsp)(nil),          // 19: g1.protocol.DBCommZsetGetRsp
	(*DBCommZsetFindRankReq)(nil),     // 20: g1.protocol.DBCommZsetFindRankReq
	(*DBCommZsetFindRankRsp)(nil),     // 21: g1.protocol.DBCommZsetFindRankRsp
	(*DBCommZsetIncrReq)(nil),         // 22: g1.protocol.DBCommZsetIncrReq
	(*DBCommZsetIncrRsp)(nil),         // 23: g1.protocol.DBCommZsetIncrRsp
	(*DBCommZScoreReq)(nil),           // 24: g1.protocol.DBCommZScoreReq
	(*DBCommZScoreRsp)(nil),           // 25: g1.protocol.DBCommZScoreRsp
	(*DBCommZRevRangeReq)(nil),        // 26: g1.protocol.DBCommZRevRangeReq
	(*DBRedisZItem)(nil),              // 27: g1.protocol.DBRedisZItem
	(*DBCommZRevRangeRsp)(nil),        // 28: g1.protocol.DBCommZRevRangeRsp
	(*DBCommExpireReq)(nil),           // 29: g1.protocol.DBCommExpireReq
	(*DBCommExpireRsp)(nil),           // 30: g1.protocol.DBCommExpireRsp
	(*DBCommSetExNxReq)(nil),          // 31: g1.protocol.DBCommSetExNxReq
	(*DBCommSetExNxRsp)(nil),          // 32: g1.protocol.DBCommSetExNxRsp
	(*Ret)(nil),                       // 33: g1.protocol.Ret
	(*descriptorpb.FieldOptions)(nil), // 34: google.protobuf.FieldOptions
}
var file_dbsvr_proto_depIdxs = []int32{
	33, // 0: g1.protocol.DBUidGetRsp.ret:type_name -> g1.protocol.Ret
	33, // 1: g1.protocol.DBUidMGetRsp.ret:type_name -> g1.protocol.Ret
	33, // 2: g1.protocol.DBUidSetRsp.ret:type_name -> g1.protocol.Ret
	33, // 3: g1.protocol.DBCommGetRsp.ret:type_name -> g1.protocol.Ret
	33, // 4: g1.protocol.DBCommMGetRsp.ret:type_name -> g1.protocol.Ret
	33, // 5: g1.protocol.DBCommSetRsp.ret:type_name -> g1.protocol.Ret
	33, // 6: g1.protocol.DBCommDelRsp.ret:type_name -> g1.protocol.Ret
	33, // 7: g1.protocol.DBCommIncrRsp.ret:type_name -> g1.protocol.Ret
	33, // 8: g1.protocol.DBCommZsetSetRsp.ret:type_name -> g1.protocol.Ret
	33, // 9: g1.protocol.DBCommZsetGetRsp.ret:type_name -> g1.protocol.Ret
	33, // 10: g1.protocol.DBCommZsetFindRankRsp.ret:type_name -> g1.protocol.Ret
	33, // 11: g1.protocol.DBCommZsetIncrRsp.ret:type_name -> g1.protocol.Ret
	33, // 12: g1.protocol.DBCommZScoreRsp.ret:type_name -> g1.protocol.Ret
	33, // 13: g1.protocol.DBCommZRevRangeRsp.ret:type_name -> g1.protocol.Ret
	27, // 14: g1.protocol.DBCommZRevRangeRsp.items:type_name -> g1.protocol.DBRedisZItem
	33, // 15: g1.protocol.DBCommExpireRsp.ret:type_name -> g1.protocol.Ret
	33, // 16: g1.protocol.DBCommSetExNxRsp.ret:type_name -> g1.protocol.Ret
	34, // 17: g1.protocol.xorm_type:extendee -> google.protobuf.FieldOptions
	34, // 18: g1.protocol.xorm_column:extendee -> google.protobuf.FieldOptions
	34, // 19: g1.protocol.xorm_pk:extendee -> google.protobuf.FieldOptions
	34, // 20: g1.protocol.xorm_autoincr:extendee -> google.protobuf.FieldOptions
	34, // 21: g1.protocol.xorm_index:extendee -> google.protobuf.FieldOptions
	34, // 22: g1.protocol.xorm_nullable:extendee -> google.protobuf.FieldOptions
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	17, // [17:23] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_dbsvr_proto_init() }
func file_dbsvr_proto_init() {
	if File_dbsvr_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dbsvr_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBUidGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBUidGetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBUidMGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBUidMGetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBUidSetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBUidSetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommGetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommMGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommMGetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommSetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommSetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommDelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommDelRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommIncrReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommIncrRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommZsetSetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommZsetSetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommZsetGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommZsetGetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommZsetFindRankReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommZsetFindRankRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommZsetIncrReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommZsetIncrRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommZScoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommZScoreRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommZRevRangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBRedisZItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommZRevRangeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommExpireReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommExpireRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommSetExNxReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbsvr_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCommSetExNxRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dbsvr_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 6,
			NumServices:   0,
		},
		GoTypes:           file_dbsvr_proto_goTypes,
		DependencyIndexes: file_dbsvr_proto_depIdxs,
		MessageInfos:      file_dbsvr_proto_msgTypes,
		ExtensionInfos:    file_dbsvr_proto_extTypes,
	}.Build()
	File_dbsvr_proto = out.File
	file_dbsvr_proto_rawDesc = nil
	file_dbsvr_proto_goTypes = nil
	file_dbsvr_proto_depIdxs = nil
}
