// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v6.30.1
// source: role.proto

package g1_protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RoleRegisterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid              uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	RegisterTime     int32  `protobuf:"varint,2,opt,name=register_time,json=registerTime,proto3" json:"register_time,omitempty"`
	Zone             int32  `protobuf:"varint,3,opt,name=zone,proto3" json:"zone,omitempty"`
	TimeOffsetMinute int32  `protobuf:"varint,4,opt,name=time_offset_minute,json=timeOffsetMinute,proto3" json:"time_offset_minute,omitempty"`
}

func (x *RoleRegisterInfo) Reset() {
	*x = RoleRegisterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleRegisterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleRegisterInfo) ProtoMessage() {}

func (x *RoleRegisterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleRegisterInfo.ProtoReflect.Descriptor instead.
func (*RoleRegisterInfo) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{0}
}

func (x *RoleRegisterInfo) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RoleRegisterInfo) GetRegisterTime() int32 {
	if x != nil {
		return x.RegisterTime
	}
	return 0
}

func (x *RoleRegisterInfo) GetZone() int32 {
	if x != nil {
		return x.Zone
	}
	return 0
}

func (x *RoleRegisterInfo) GetTimeOffsetMinute() int32 {
	if x != nil {
		return x.TimeOffsetMinute
	}
	return 0
}

type RoleLoginInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastLoginTime    int32 `protobuf:"varint,1,opt,name=last_login_time,json=lastLoginTime,proto3" json:"last_login_time,omitempty"`
	LastLogoutTime   int32 `protobuf:"varint,2,opt,name=last_logout_time,json=lastLogoutTime,proto3" json:"last_logout_time,omitempty"`
	LastHartBeatTime int32 `protobuf:"varint,3,opt,name=last_hart_beat_time,json=lastHartBeatTime,proto3" json:"last_hart_beat_time,omitempty"`
	NowLoginTime     int32 `protobuf:"varint,4,opt,name=now_login_time,json=nowLoginTime,proto3" json:"now_login_time,omitempty"`
}

func (x *RoleLoginInfo) Reset() {
	*x = RoleLoginInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleLoginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleLoginInfo) ProtoMessage() {}

func (x *RoleLoginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleLoginInfo.ProtoReflect.Descriptor instead.
func (*RoleLoginInfo) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{1}
}

func (x *RoleLoginInfo) GetLastLoginTime() int32 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *RoleLoginInfo) GetLastLogoutTime() int32 {
	if x != nil {
		return x.LastLogoutTime
	}
	return 0
}

func (x *RoleLoginInfo) GetLastHartBeatTime() int32 {
	if x != nil {
		return x.LastHartBeatTime
	}
	return 0
}

func (x *RoleLoginInfo) GetNowLoginTime() int32 {
	if x != nil {
		return x.NowLoginTime
	}
	return 0
}

type RoleGameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayRoomIds []uint64 `protobuf:"varint,1,rep,packed,name=play_room_ids,json=playRoomIds,proto3" json:"play_room_ids,omitempty"` // 正在游玩的房间IDs
}

func (x *RoleGameInfo) Reset() {
	*x = RoleGameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleGameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleGameInfo) ProtoMessage() {}

func (x *RoleGameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleGameInfo.ProtoReflect.Descriptor instead.
func (*RoleGameInfo) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{2}
}

func (x *RoleGameInfo) GetPlayRoomIds() []uint64 {
	if x != nil {
		return x.PlayRoomIds
	}
	return nil
}

type RoleBasicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                   // 角色名称
	Level      int32  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`                                // 等级
	Exp        int64  `protobuf:"varint,3,opt,name=exp,proto3" json:"exp,omitempty"`                                    // 经验
	Gold       int64  `protobuf:"varint,4,opt,name=gold,proto3" json:"gold,omitempty"`                                  // 金币
	Diamond    int64  `protobuf:"varint,5,opt,name=diamond,proto3" json:"diamond,omitempty"`                            // 钻石
	Credit     int64  `protobuf:"varint,6,opt,name=credit,proto3" json:"credit,omitempty"`                              // 信用
	Liveness   int64  `protobuf:"varint,7,opt,name=liveness,proto3" json:"liveness,omitempty"`                          // 活跃度
	GuildCoin  int64  `protobuf:"varint,8,opt,name=guild_coin,json=guildCoin,proto3" json:"guild_coin,omitempty"`       // 公会币
	FreeCnt    uint32 `protobuf:"varint,9,opt,name=free_cnt,json=freeCnt,proto3" json:"free_cnt,omitempty"`             // 免费改名次数
	AceCoin    int64  `protobuf:"varint,10,opt,name=ace_coin,json=aceCoin,proto3" json:"ace_coin,omitempty"`            // ace币
	WinAceCoin int64  `protobuf:"varint,11,opt,name=win_ace_coin,json=winAceCoin,proto3" json:"win_ace_coin,omitempty"` // Win ace币
}

func (x *RoleBasicInfo) Reset() {
	*x = RoleBasicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleBasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleBasicInfo) ProtoMessage() {}

func (x *RoleBasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleBasicInfo.ProtoReflect.Descriptor instead.
func (*RoleBasicInfo) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{3}
}

func (x *RoleBasicInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleBasicInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *RoleBasicInfo) GetExp() int64 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *RoleBasicInfo) GetGold() int64 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *RoleBasicInfo) GetDiamond() int64 {
	if x != nil {
		return x.Diamond
	}
	return 0
}

func (x *RoleBasicInfo) GetCredit() int64 {
	if x != nil {
		return x.Credit
	}
	return 0
}

func (x *RoleBasicInfo) GetLiveness() int64 {
	if x != nil {
		return x.Liveness
	}
	return 0
}

func (x *RoleBasicInfo) GetGuildCoin() int64 {
	if x != nil {
		return x.GuildCoin
	}
	return 0
}

func (x *RoleBasicInfo) GetFreeCnt() uint32 {
	if x != nil {
		return x.FreeCnt
	}
	return 0
}

func (x *RoleBasicInfo) GetAceCoin() int64 {
	if x != nil {
		return x.AceCoin
	}
	return 0
}

func (x *RoleBasicInfo) GetWinAceCoin() int64 {
	if x != nil {
		return x.WinAceCoin
	}
	return 0
}

// 道具信息
type PbItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Time  int32 `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"` // 0表示永久
}

func (x *PbItem) Reset() {
	*x = PbItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbItem) ProtoMessage() {}

func (x *PbItem) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbItem.ProtoReflect.Descriptor instead.
func (*PbItem) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{4}
}

func (x *PbItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PbItem) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PbItem) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

type RoleInventoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemMap map[int32]*PbItem `protobuf:"bytes,1,rep,name=item_map,json=itemMap,proto3" json:"item_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RoleInventoryInfo) Reset() {
	*x = RoleInventoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleInventoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleInventoryInfo) ProtoMessage() {}

func (x *RoleInventoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleInventoryInfo.ProtoReflect.Descriptor instead.
func (*RoleInventoryInfo) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{5}
}

func (x *RoleInventoryInfo) GetItemMap() map[int32]*PbItem {
	if x != nil {
		return x.ItemMap
	}
	return nil
}

// 头像
type PbIcon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RedPoint bool  `protobuf:"varint,2,opt,name=red_point,json=redPoint,proto3" json:"red_point,omitempty"`
}

func (x *PbIcon) Reset() {
	*x = PbIcon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbIcon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbIcon) ProtoMessage() {}

func (x *PbIcon) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbIcon.ProtoReflect.Descriptor instead.
func (*PbIcon) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{6}
}

func (x *PbIcon) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PbIcon) GetRedPoint() bool {
	if x != nil {
		return x.RedPoint
	}
	return false
}

// 头像框
type PbFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RedPoint bool  `protobuf:"varint,2,opt,name=red_point,json=redPoint,proto3" json:"red_point,omitempty"`
}

func (x *PbFrame) Reset() {
	*x = PbFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbFrame) ProtoMessage() {}

func (x *PbFrame) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbFrame.ProtoReflect.Descriptor instead.
func (*PbFrame) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{7}
}

func (x *PbFrame) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PbFrame) GetRedPoint() bool {
	if x != nil {
		return x.RedPoint
	}
	return false
}

// 头像
type RoleIconInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IconUrl  string             `protobuf:"bytes,1,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`                                                                                             // 当前头像url
	FrameId  int32              `protobuf:"varint,2,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`                                                                                            // 当前相框
	IconMap  map[int32]*PbIcon  `protobuf:"bytes,3,rep,name=icon_map,json=iconMap,proto3" json:"icon_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`    // 已解锁的头像列表
	FrameMap map[int32]*PbFrame `protobuf:"bytes,4,rep,name=frame_map,json=frameMap,proto3" json:"frame_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 已解锁的头像框列表
}

func (x *RoleIconInfo) Reset() {
	*x = RoleIconInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleIconInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleIconInfo) ProtoMessage() {}

func (x *RoleIconInfo) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleIconInfo.ProtoReflect.Descriptor instead.
func (*RoleIconInfo) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{8}
}

func (x *RoleIconInfo) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *RoleIconInfo) GetFrameId() int32 {
	if x != nil {
		return x.FrameId
	}
	return 0
}

func (x *RoleIconInfo) GetIconMap() map[int32]*PbIcon {
	if x != nil {
		return x.IconMap
	}
	return nil
}

func (x *RoleIconInfo) GetFrameMap() map[int32]*PbFrame {
	if x != nil {
		return x.FrameMap
	}
	return nil
}

// 商城礼包
type PbMallItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfId        int32 `protobuf:"varint,1,opt,name=conf_id,json=confId,proto3" json:"conf_id,omitempty"`
	DailyBuyCount int32 `protobuf:"varint,2,opt,name=daily_buy_count,json=dailyBuyCount,proto3" json:"daily_buy_count,omitempty"`
	TotalBuyCount int32 `protobuf:"varint,3,opt,name=total_buy_count,json=totalBuyCount,proto3" json:"total_buy_count,omitempty"`
}

func (x *PbMallItem) Reset() {
	*x = PbMallItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbMallItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbMallItem) ProtoMessage() {}

func (x *PbMallItem) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbMallItem.ProtoReflect.Descriptor instead.
func (*PbMallItem) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{9}
}

func (x *PbMallItem) GetConfId() int32 {
	if x != nil {
		return x.ConfId
	}
	return 0
}

func (x *PbMallItem) GetDailyBuyCount() int32 {
	if x != nil {
		return x.DailyBuyCount
	}
	return 0
}

func (x *PbMallItem) GetTotalBuyCount() int32 {
	if x != nil {
		return x.TotalBuyCount
	}
	return 0
}

// 商城礼包
type RoleMallInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemMap map[int32]*PbMallItem `protobuf:"bytes,1,rep,name=item_map,json=itemMap,proto3" json:"item_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RoleMallInfo) Reset() {
	*x = RoleMallInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMallInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMallInfo) ProtoMessage() {}

func (x *RoleMallInfo) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMallInfo.ProtoReflect.Descriptor instead.
func (*RoleMallInfo) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{10}
}

func (x *RoleMallInfo) GetItemMap() map[int32]*PbMallItem {
	if x != nil {
		return x.ItemMap
	}
	return nil
}

type PbTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId   int32 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Argv1    int32 `protobuf:"varint,2,opt,name=argv1,proto3" json:"argv1,omitempty"`
	Argv2    int32 `protobuf:"varint,3,opt,name=argv2,proto3" json:"argv2,omitempty"`
	Argv3    int32 `protobuf:"varint,4,opt,name=argv3,proto3" json:"argv3,omitempty"`
	Progress int32 `protobuf:"varint,5,opt,name=progress,proto3" json:"progress,omitempty"`
	TaskType int32 `protobuf:"varint,6,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	HasAward int32 `protobuf:"varint,7,opt,name=has_award,json=hasAward,proto3" json:"has_award,omitempty"` //完成奖励   0未领取 1可领取，2自动发放，3手动领取
}

func (x *PbTask) Reset() {
	*x = PbTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbTask) ProtoMessage() {}

func (x *PbTask) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbTask.ProtoReflect.Descriptor instead.
func (*PbTask) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{11}
}

func (x *PbTask) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *PbTask) GetArgv1() int32 {
	if x != nil {
		return x.Argv1
	}
	return 0
}

func (x *PbTask) GetArgv2() int32 {
	if x != nil {
		return x.Argv2
	}
	return 0
}

func (x *PbTask) GetArgv3() int32 {
	if x != nil {
		return x.Argv3
	}
	return 0
}

func (x *PbTask) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *PbTask) GetTaskType() int32 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *PbTask) GetHasAward() int32 {
	if x != nil {
		return x.HasAward
	}
	return 0
}

type RoleTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskMap map[int32]*PbTask `protobuf:"bytes,1,rep,name=task_map,json=taskMap,proto3" json:"task_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RoleTaskInfo) Reset() {
	*x = RoleTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleTaskInfo) ProtoMessage() {}

func (x *RoleTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleTaskInfo.ProtoReflect.Descriptor instead.
func (*RoleTaskInfo) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{12}
}

func (x *RoleTaskInfo) GetTaskMap() map[int32]*PbTask {
	if x != nil {
		return x.TaskMap
	}
	return nil
}

// 主线任务
type RoleMainTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurTaskId int32 `protobuf:"varint,1,opt,name=cur_task_id,json=curTaskId,proto3" json:"cur_task_id,omitempty"`
	Finished  bool  `protobuf:"varint,2,opt,name=finished,proto3" json:"finished,omitempty"`
}

func (x *RoleMainTaskInfo) Reset() {
	*x = RoleMainTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMainTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMainTaskInfo) ProtoMessage() {}

func (x *RoleMainTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMainTaskInfo.ProtoReflect.Descriptor instead.
func (*RoleMainTaskInfo) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{13}
}

func (x *RoleMainTaskInfo) GetCurTaskId() int32 {
	if x != nil {
		return x.CurTaskId
	}
	return 0
}

func (x *RoleMainTaskInfo) GetFinished() bool {
	if x != nil {
		return x.Finished
	}
	return false
}

// 个人公会信息 ,例如公会副本，商场购买记录等
type RoleGuildInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gid       uint64 `protobuf:"varint,1,opt,name=gid,proto3" json:"gid,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Title     int32  `protobuf:"varint,3,opt,name=title,proto3" json:"title,omitempty"`
	DonateCnt uint32 `protobuf:"varint,4,opt,name=donate_cnt,json=donateCnt,proto3" json:"donate_cnt,omitempty"`
}

func (x *RoleGuildInfo) Reset() {
	*x = RoleGuildInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleGuildInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleGuildInfo) ProtoMessage() {}

func (x *RoleGuildInfo) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleGuildInfo.ProtoReflect.Descriptor instead.
func (*RoleGuildInfo) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{14}
}

func (x *RoleGuildInfo) GetGid() uint64 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *RoleGuildInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleGuildInfo) GetTitle() int32 {
	if x != nil {
		return x.Title
	}
	return 0
}

func (x *RoleGuildInfo) GetDonateCnt() uint32 {
	if x != nil {
		return x.DonateCnt
	}
	return 0
}

// 玩家引导ID
type RoleGuideInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdLis []int32 `protobuf:"varint,1,rep,packed,name=id_lis,json=idLis,proto3" json:"id_lis,omitempty"` // 已经完成
	CurId int32   `protobuf:"varint,2,opt,name=cur_id,json=curId,proto3" json:"cur_id,omitempty"`        // 正在进行的ID
}

func (x *RoleGuideInfo) Reset() {
	*x = RoleGuideInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleGuideInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleGuideInfo) ProtoMessage() {}

func (x *RoleGuideInfo) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleGuideInfo.ProtoReflect.Descriptor instead.
func (*RoleGuideInfo) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{15}
}

func (x *RoleGuideInfo) GetIdLis() []int32 {
	if x != nil {
		return x.IdLis
	}
	return nil
}

func (x *RoleGuideInfo) GetCurId() int32 {
	if x != nil {
		return x.CurId
	}
	return 0
}

// 功能开放列表
type RoleOpenFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []int32 `protobuf:"varint,1,rep,packed,name=data,proto3" json:"data,omitempty"`                       // 已经开放的功能ID
	IsAllOpen bool    `protobuf:"varint,2,opt,name=is_all_open,json=isAllOpen,proto3" json:"is_all_open,omitempty"` // 测试用,上线后删除该字段
}

func (x *RoleOpenFunction) Reset() {
	*x = RoleOpenFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleOpenFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleOpenFunction) ProtoMessage() {}

func (x *RoleOpenFunction) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleOpenFunction.ProtoReflect.Descriptor instead.
func (*RoleOpenFunction) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{16}
}

func (x *RoleOpenFunction) GetData() []int32 {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RoleOpenFunction) GetIsAllOpen() bool {
	if x != nil {
		return x.IsAllOpen
	}
	return false
}

// 礼包码
type RoleGiftExchangeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeMap map[int32]int32 `protobuf:"bytes,1,rep,name=type_map,json=typeMap,proto3" json:"type_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 已经领取过的礼包  key:类型id,val: 数量
}

func (x *RoleGiftExchangeInfo) Reset() {
	*x = RoleGiftExchangeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleGiftExchangeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleGiftExchangeInfo) ProtoMessage() {}

func (x *RoleGiftExchangeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleGiftExchangeInfo.ProtoReflect.Descriptor instead.
func (*RoleGiftExchangeInfo) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{17}
}

func (x *RoleGiftExchangeInfo) GetTypeMap() map[int32]int32 {
	if x != nil {
		return x.TypeMap
	}
	return nil
}

// 活动任务,日常，成就等
type RoleActvityTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskMap map[int32]*PbTask `protobuf:"bytes,1,rep,name=task_map,json=taskMap,proto3" json:"task_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RoleActvityTaskInfo) Reset() {
	*x = RoleActvityTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleActvityTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleActvityTaskInfo) ProtoMessage() {}

func (x *RoleActvityTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleActvityTaskInfo.ProtoReflect.Descriptor instead.
func (*RoleActvityTaskInfo) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{18}
}

func (x *RoleActvityTaskInfo) GetTaskMap() map[int32]*PbTask {
	if x != nil {
		return x.TaskMap
	}
	return nil
}

// 角色的所有数据
type RoleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegisterInfo  *RoleRegisterInfo     `protobuf:"bytes,1,opt,name=register_info,json=registerInfo,proto3" json:"register_info,omitempty"`
	LoginInfo     *RoleLoginInfo        `protobuf:"bytes,2,opt,name=login_info,json=loginInfo,proto3" json:"login_info,omitempty"`
	GameInfo      *RoleGameInfo         `protobuf:"bytes,3,opt,name=game_info,json=gameInfo,proto3" json:"game_info,omitempty"`                // 游戏信息
	BasicInfo     *RoleBasicInfo        `protobuf:"bytes,4,opt,name=basic_info,json=basicInfo,proto3" json:"basic_info,omitempty"`             // role base
	InventoryInfo *RoleInventoryInfo    `protobuf:"bytes,5,opt,name=inventory_info,json=inventoryInfo,proto3" json:"inventory_info,omitempty"` // 背包数据
	IconInfo      *RoleIconInfo         `protobuf:"bytes,6,opt,name=icon_info,json=iconInfo,proto3" json:"icon_info,omitempty"`                // 头像资源
	MallInfo      *RoleMallInfo         `protobuf:"bytes,7,opt,name=mall_info,json=mallInfo,proto3" json:"mall_info,omitempty"`                // 商城
	MainTaskInfo  *RoleMainTaskInfo     `protobuf:"bytes,8,opt,name=main_task_info,json=mainTaskInfo,proto3" json:"main_task_info,omitempty"`  // 主线任务
	GuildInfo     *RoleGuildInfo        `protobuf:"bytes,9,opt,name=guild_info,json=guildInfo,proto3" json:"guild_info,omitempty"`             // 公会
	GuideInfo     *RoleGuideInfo        `protobuf:"bytes,10,opt,name=guide_info,json=guideInfo,proto3" json:"guide_info,omitempty"`            // 引导数据
	OpenFunInfo   *RoleOpenFunction     `protobuf:"bytes,11,opt,name=open_fun_info,json=openFunInfo,proto3" json:"open_fun_info,omitempty"`    // 功能开放
	GiftInfo      *RoleGiftExchangeInfo `protobuf:"bytes,12,opt,name=gift_info,json=giftInfo,proto3" json:"gift_info,omitempty"`               // 礼包兑换
	Actvity_Info  *RoleActvityTaskInfo  `protobuf:"bytes,13,opt,name=actvity_Info,json=actvityInfo,proto3" json:"actvity_Info,omitempty"`      // 活动任务，日常等
	ConnSvrInfo   *ConnSvrInfo          `protobuf:"bytes,100,opt,name=conn_svr_info,json=connSvrInfo,proto3" json:"conn_svr_info,omitempty"`   // 服务器用，客户端不用管
}

func (x *RoleInfo) Reset() {
	*x = RoleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleInfo) ProtoMessage() {}

func (x *RoleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleInfo.ProtoReflect.Descriptor instead.
func (*RoleInfo) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{19}
}

func (x *RoleInfo) GetRegisterInfo() *RoleRegisterInfo {
	if x != nil {
		return x.RegisterInfo
	}
	return nil
}

func (x *RoleInfo) GetLoginInfo() *RoleLoginInfo {
	if x != nil {
		return x.LoginInfo
	}
	return nil
}

func (x *RoleInfo) GetGameInfo() *RoleGameInfo {
	if x != nil {
		return x.GameInfo
	}
	return nil
}

func (x *RoleInfo) GetBasicInfo() *RoleBasicInfo {
	if x != nil {
		return x.BasicInfo
	}
	return nil
}

func (x *RoleInfo) GetInventoryInfo() *RoleInventoryInfo {
	if x != nil {
		return x.InventoryInfo
	}
	return nil
}

func (x *RoleInfo) GetIconInfo() *RoleIconInfo {
	if x != nil {
		return x.IconInfo
	}
	return nil
}

func (x *RoleInfo) GetMallInfo() *RoleMallInfo {
	if x != nil {
		return x.MallInfo
	}
	return nil
}

func (x *RoleInfo) GetMainTaskInfo() *RoleMainTaskInfo {
	if x != nil {
		return x.MainTaskInfo
	}
	return nil
}

func (x *RoleInfo) GetGuildInfo() *RoleGuildInfo {
	if x != nil {
		return x.GuildInfo
	}
	return nil
}

func (x *RoleInfo) GetGuideInfo() *RoleGuideInfo {
	if x != nil {
		return x.GuideInfo
	}
	return nil
}

func (x *RoleInfo) GetOpenFunInfo() *RoleOpenFunction {
	if x != nil {
		return x.OpenFunInfo
	}
	return nil
}

func (x *RoleInfo) GetGiftInfo() *RoleGiftExchangeInfo {
	if x != nil {
		return x.GiftInfo
	}
	return nil
}

func (x *RoleInfo) GetActvity_Info() *RoleActvityTaskInfo {
	if x != nil {
		return x.Actvity_Info
	}
	return nil
}

func (x *RoleInfo) GetConnSvrInfo() *ConnSvrInfo {
	if x != nil {
		return x.ConnSvrInfo
	}
	return nil
}

type ConnSvrInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusId     uint32 `protobuf:"varint,1,opt,name=bus_id,json=busId,proto3" json:"bus_id,omitempty"`
	ClientPos string `protobuf:"bytes,2,opt,name=client_pos,json=clientPos,proto3" json:"client_pos,omitempty"`
	ClientIp  uint32 `protobuf:"varint,3,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
}

func (x *ConnSvrInfo) Reset() {
	*x = ConnSvrInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnSvrInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnSvrInfo) ProtoMessage() {}

func (x *ConnSvrInfo) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnSvrInfo.ProtoReflect.Descriptor instead.
func (*ConnSvrInfo) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{20}
}

func (x *ConnSvrInfo) GetBusId() uint32 {
	if x != nil {
		return x.BusId
	}
	return 0
}

func (x *ConnSvrInfo) GetClientPos() string {
	if x != nil {
		return x.ClientPos
	}
	return ""
}

func (x *ConnSvrInfo) GetClientIp() uint32 {
	if x != nil {
		return x.ClientIp
	}
	return 0
}

// 玩家头像框需要的信息
type PbIconDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IconUrl        string `protobuf:"bytes,3,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	Frame          int32  `protobuf:"varint,4,opt,name=frame,proto3" json:"frame,omitempty"`
	Level          int32  `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	VipLevel       int32  `protobuf:"varint,6,opt,name=vip_level,json=vipLevel,proto3" json:"vip_level,omitempty"`
	LastOnlineTime int32  `protobuf:"varint,30,opt,name=last_online_time,json=lastOnlineTime,proto3" json:"last_online_time,omitempty"`
	IsOnline       bool   `protobuf:"varint,31,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
}

func (x *PbIconDesc) Reset() {
	*x = PbIconDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbIconDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbIconDesc) ProtoMessage() {}

func (x *PbIconDesc) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbIconDesc.ProtoReflect.Descriptor instead.
func (*PbIconDesc) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{21}
}

func (x *PbIconDesc) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PbIconDesc) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PbIconDesc) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *PbIconDesc) GetFrame() int32 {
	if x != nil {
		return x.Frame
	}
	return 0
}

func (x *PbIconDesc) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PbIconDesc) GetVipLevel() int32 {
	if x != nil {
		return x.VipLevel
	}
	return 0
}

func (x *PbIconDesc) GetLastOnlineTime() int32 {
	if x != nil {
		return x.LastOnlineTime
	}
	return 0
}

func (x *PbIconDesc) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

var File_role_proto protoreflect.FileDescriptor

var file_role_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x67, 0x31,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x8b, 0x01, 0x0a, 0x10, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x65,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x61, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x61,
	0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x6f,
	0x77, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x6e, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x32, 0x0a, 0x0c, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x22, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x73, 0x22, 0xa4, 0x02, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65,
	0x78, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x76, 0x65,
	0x6e, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x69, 0x76, 0x65,
	0x6e, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x63, 0x6f,
	0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x43,
	0x6f, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x63, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x72, 0x65, 0x65, 0x43, 0x6e, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x69, 0x6e,
	0x5f, 0x61, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x77, 0x69, 0x6e, 0x41, 0x63, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x22, 0x42, 0x0a, 0x06, 0x50,
	0x62, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22,
	0xac, 0x01, 0x0a, 0x11, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70, 0x1a, 0x4f, 0x0a,
	0x0c, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x62, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x35,
	0x0a, 0x06, 0x50, 0x62, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x64, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x64,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x36, 0x0a, 0x07, 0x50, 0x62, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0xf1, 0x02,
	0x0a, 0x0c, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x70,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x49, 0x63, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x69, 0x63, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x12, 0x44, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x5f, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x31, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x63, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x70, 0x1a, 0x4f, 0x0a,
	0x0c, 0x49, 0x63, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x62, 0x49,
	0x63, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x51,
	0x0a, 0x0d, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50,
	0x62, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x75, 0x0a, 0x0a, 0x50, 0x62, 0x4d, 0x61, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x61, 0x69, 0x6c,
	0x79, 0x5f, 0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x0c, 0x52, 0x6f, 0x6c,
	0x65, 0x4d, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x31,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x61,
	0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70, 0x1a, 0x53, 0x0a, 0x0c,
	0x49, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x62, 0x4d, 0x61,
	0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xb9, 0x01, 0x0a, 0x06, 0x50, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x72, 0x67, 0x76, 0x31, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x72, 0x67, 0x76, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x72, 0x67, 0x76, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x72, 0x67, 0x76,
	0x32, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x72, 0x67, 0x76, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x61, 0x72, 0x67, 0x76, 0x33, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x5f, 0x61, 0x77, 0x61, 0x72, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x61, 0x73, 0x41, 0x77, 0x61, 0x72, 0x64, 0x22, 0xa2, 0x01,
	0x0a, 0x0c, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41,
	0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x4d, 0x61,
	0x70, 0x1a, 0x4f, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x50, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x4e, 0x0a, 0x10, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x5f, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x75, 0x72,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x22, 0x6a, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x43, 0x6e, 0x74, 0x22, 0x3d,
	0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x75, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x75, 0x72, 0x49, 0x64, 0x22, 0x46, 0x0a,
	0x10, 0x52, 0x6f, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x5f,
	0x6f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x41, 0x6c,
	0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x22, 0x9d, 0x01, 0x0a, 0x14, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x69,
	0x66, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x49,
	0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x47, 0x69, 0x66, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x1a, 0x3a, 0x0a, 0x0c, 0x54, 0x79, 0x70,
	0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb0, 0x01, 0x0a, 0x13, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63,
	0x74, 0x76, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x48, 0x0a,
	0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x41, 0x63, 0x74, 0x76, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x74, 0x61, 0x73, 0x6b, 0x4d, 0x61, 0x70, 0x1a, 0x4f, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf4, 0x06, 0x0a, 0x08, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x0a, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x0a,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0d, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36,
	0x0a, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x69, 0x63,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x09, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x6c, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43,
	0x0a, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x0a, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39,
	0x0a, 0x0a, 0x67, 0x75, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x75, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x67, 0x75, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x0d, 0x6f, 0x70, 0x65,
	0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x46, 0x75, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x09,
	0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x47, 0x69, 0x66, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x67, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43, 0x0a, 0x0c,
	0x61, 0x63, 0x74, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x76, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x3c, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x73, 0x76, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x53, 0x76, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x53, 0x76, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x60, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x6e, 0x53, 0x76, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15,
	0x0a, 0x06, 0x62, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x62, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x50, 0x6f, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x70, 0x22, 0xdd, 0x01, 0x0a, 0x0a, 0x50, 0x62, 0x49, 0x63, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a,
	0x09, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x76, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x67, 0x31, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_role_proto_rawDescOnce sync.Once
	file_role_proto_rawDescData = file_role_proto_rawDesc
)

func file_role_proto_rawDescGZIP() []byte {
	file_role_proto_rawDescOnce.Do(func() {
		file_role_proto_rawDescData = protoimpl.X.CompressGZIP(file_role_proto_rawDescData)
	})
	return file_role_proto_rawDescData
}

var file_role_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_role_proto_goTypes = []interface{}{
	(*RoleRegisterInfo)(nil),     // 0: g1.protocol.RoleRegisterInfo
	(*RoleLoginInfo)(nil),        // 1: g1.protocol.RoleLoginInfo
	(*RoleGameInfo)(nil),         // 2: g1.protocol.RoleGameInfo
	(*RoleBasicInfo)(nil),        // 3: g1.protocol.RoleBasicInfo
	(*PbItem)(nil),               // 4: g1.protocol.PbItem
	(*RoleInventoryInfo)(nil),    // 5: g1.protocol.RoleInventoryInfo
	(*PbIcon)(nil),               // 6: g1.protocol.PbIcon
	(*PbFrame)(nil),              // 7: g1.protocol.PbFrame
	(*RoleIconInfo)(nil),         // 8: g1.protocol.RoleIconInfo
	(*PbMallItem)(nil),           // 9: g1.protocol.PbMallItem
	(*RoleMallInfo)(nil),         // 10: g1.protocol.RoleMallInfo
	(*PbTask)(nil),               // 11: g1.protocol.PbTask
	(*RoleTaskInfo)(nil),         // 12: g1.protocol.RoleTaskInfo
	(*RoleMainTaskInfo)(nil),     // 13: g1.protocol.RoleMainTaskInfo
	(*RoleGuildInfo)(nil),        // 14: g1.protocol.RoleGuildInfo
	(*RoleGuideInfo)(nil),        // 15: g1.protocol.RoleGuideInfo
	(*RoleOpenFunction)(nil),     // 16: g1.protocol.RoleOpenFunction
	(*RoleGiftExchangeInfo)(nil), // 17: g1.protocol.RoleGiftExchangeInfo
	(*RoleActvityTaskInfo)(nil),  // 18: g1.protocol.RoleActvityTaskInfo
	(*RoleInfo)(nil),             // 19: g1.protocol.RoleInfo
	(*ConnSvrInfo)(nil),          // 20: g1.protocol.ConnSvrInfo
	(*PbIconDesc)(nil),           // 21: g1.protocol.PbIconDesc
	nil,                          // 22: g1.protocol.RoleInventoryInfo.ItemMapEntry
	nil,                          // 23: g1.protocol.RoleIconInfo.IconMapEntry
	nil,                          // 24: g1.protocol.RoleIconInfo.FrameMapEntry
	nil,                          // 25: g1.protocol.RoleMallInfo.ItemMapEntry
	nil,                          // 26: g1.protocol.RoleTaskInfo.TaskMapEntry
	nil,                          // 27: g1.protocol.RoleGiftExchangeInfo.TypeMapEntry
	nil,                          // 28: g1.protocol.RoleActvityTaskInfo.TaskMapEntry
}
var file_role_proto_depIdxs = []int32{
	22, // 0: g1.protocol.RoleInventoryInfo.item_map:type_name -> g1.protocol.RoleInventoryInfo.ItemMapEntry
	23, // 1: g1.protocol.RoleIconInfo.icon_map:type_name -> g1.protocol.RoleIconInfo.IconMapEntry
	24, // 2: g1.protocol.RoleIconInfo.frame_map:type_name -> g1.protocol.RoleIconInfo.FrameMapEntry
	25, // 3: g1.protocol.RoleMallInfo.item_map:type_name -> g1.protocol.RoleMallInfo.ItemMapEntry
	26, // 4: g1.protocol.RoleTaskInfo.task_map:type_name -> g1.protocol.RoleTaskInfo.TaskMapEntry
	27, // 5: g1.protocol.RoleGiftExchangeInfo.type_map:type_name -> g1.protocol.RoleGiftExchangeInfo.TypeMapEntry
	28, // 6: g1.protocol.RoleActvityTaskInfo.task_map:type_name -> g1.protocol.RoleActvityTaskInfo.TaskMapEntry
	0,  // 7: g1.protocol.RoleInfo.register_info:type_name -> g1.protocol.RoleRegisterInfo
	1,  // 8: g1.protocol.RoleInfo.login_info:type_name -> g1.protocol.RoleLoginInfo
	2,  // 9: g1.protocol.RoleInfo.game_info:type_name -> g1.protocol.RoleGameInfo
	3,  // 10: g1.protocol.RoleInfo.basic_info:type_name -> g1.protocol.RoleBasicInfo
	5,  // 11: g1.protocol.RoleInfo.inventory_info:type_name -> g1.protocol.RoleInventoryInfo
	8,  // 12: g1.protocol.RoleInfo.icon_info:type_name -> g1.protocol.RoleIconInfo
	10, // 13: g1.protocol.RoleInfo.mall_info:type_name -> g1.protocol.RoleMallInfo
	13, // 14: g1.protocol.RoleInfo.main_task_info:type_name -> g1.protocol.RoleMainTaskInfo
	14, // 15: g1.protocol.RoleInfo.guild_info:type_name -> g1.protocol.RoleGuildInfo
	15, // 16: g1.protocol.RoleInfo.guide_info:type_name -> g1.protocol.RoleGuideInfo
	16, // 17: g1.protocol.RoleInfo.open_fun_info:type_name -> g1.protocol.RoleOpenFunction
	17, // 18: g1.protocol.RoleInfo.gift_info:type_name -> g1.protocol.RoleGiftExchangeInfo
	18, // 19: g1.protocol.RoleInfo.actvity_Info:type_name -> g1.protocol.RoleActvityTaskInfo
	20, // 20: g1.protocol.RoleInfo.conn_svr_info:type_name -> g1.protocol.ConnSvrInfo
	4,  // 21: g1.protocol.RoleInventoryInfo.ItemMapEntry.value:type_name -> g1.protocol.PbItem
	6,  // 22: g1.protocol.RoleIconInfo.IconMapEntry.value:type_name -> g1.protocol.PbIcon
	7,  // 23: g1.protocol.RoleIconInfo.FrameMapEntry.value:type_name -> g1.protocol.PbFrame
	9,  // 24: g1.protocol.RoleMallInfo.ItemMapEntry.value:type_name -> g1.protocol.PbMallItem
	11, // 25: g1.protocol.RoleTaskInfo.TaskMapEntry.value:type_name -> g1.protocol.PbTask
	11, // 26: g1.protocol.RoleActvityTaskInfo.TaskMapEntry.value:type_name -> g1.protocol.PbTask
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_role_proto_init() }
func file_role_proto_init() {
	if File_role_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_role_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleRegisterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleLoginInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleGameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleBasicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleInventoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbIcon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleIconInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbMallItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMallInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMainTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleGuildInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleGuideInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleOpenFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleGiftExchangeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleActvityTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnSvrInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbIconDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_role_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_role_proto_goTypes,
		DependencyIndexes: file_role_proto_depIdxs,
		MessageInfos:      file_role_proto_msgTypes,
	}.Build()
	File_role_proto = out.File
	file_role_proto_rawDesc = nil
	file_role_proto_goTypes = nil
	file_role_proto_depIdxs = nil
}
